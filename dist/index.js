"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
var express_1 = __importDefault(require("express"));
var morgan_1 = __importDefault(require("morgan"));
var cors_1 = __importDefault(require("cors"));
var typeorm_1 = require("typeorm");
var Empresa_service_1 = require("./services/Empresa.service");
var Empresa_repository_1 = require("./repositories/Empresa.repository");
var Empresa_controller_1 = require("./controllers/Empresa.controller");
var LineaColectivo_service_1 = require("./services/LineaColectivo.service");
var LineaColectivo_repository_1 = require("./repositories/LineaColectivo.repository");
var LineaColectivo_controller_1 = require("./controllers/LineaColectivo.controller");
var Parada_service_1 = require("./services/Parada.service");
var Parada_repository_1 = require("./repositories/Parada.repository");
var Parada_controller_1 = require("./controllers/Parada.controller");
var Recorrido_service_1 = require("./services/Recorrido.service");
var Recorrido_repository_1 = require("./repositories/Recorrido.repository");
var Recorrido_controller_1 = require("./controllers/Recorrido.controller");
var Chofer_service_1 = require("./services/Chofer.service");
var Chofer_repository_1 = require("./repositories/Chofer.repository");
var Chofer_controller_1 = require("./controllers/Chofer.controller");
var Calendario_service_1 = require("./services/Calendario.service");
var Calendario_repository_1 = require("./repositories/Calendario.repository");
var Calendario_controller_1 = require("./controllers/Calendario.controller");
var empresaEntity = new typeorm_1.Repository();
var empresaRepo = new Empresa_repository_1.EmpresaRepository(empresaEntity);
var empresaService = new Empresa_service_1.EmpresaService(empresaRepo);
var empresaController = new Empresa_controller_1.EmpresaController(empresaService);
var lineaEntity = new typeorm_1.Repository();
var lineaRepo = new LineaColectivo_repository_1.LineaColectivoRepository(lineaEntity);
var lineaService = new LineaColectivo_service_1.LineaColectivoService(lineaRepo);
var lineaController = new LineaColectivo_controller_1.LineaColectivoController(lineaService);
var paradaEntity = new typeorm_1.Repository();
var paradaRepo = new Parada_repository_1.ParadaColectivoRepository(paradaEntity);
var paradaService = new Parada_service_1.ParadaService(paradaRepo);
var paradaController = new Parada_controller_1.ParadaController(paradaService);
var recorridoEntity = new typeorm_1.Repository();
var recorridoRepo = new Recorrido_repository_1.RecorridoRepository(recorridoEntity);
var recorridoService = new Recorrido_service_1.RecorridoService(recorridoRepo);
var recorridoController = new Recorrido_controller_1.RecorridoController(recorridoService);
var choferEntity = new typeorm_1.Repository();
var choferRepo = new Chofer_repository_1.ChoferRepository(choferEntity);
var choferService = new Chofer_service_1.ChoferService(choferRepo);
var choferController = new Chofer_controller_1.ChoferController(choferService);
var calendarioEntity = new typeorm_1.Repository();
var calendarioRepo = new Calendario_repository_1.CalendarioRepository(calendarioEntity);
var calendarioService = new Calendario_service_1.CalendarioService(calendarioRepo);
var calendarioController = new Calendario_controller_1.CalendarioController(calendarioService);
typeorm_1.createConnection();
var app = express_1.default();
//middlewars
app.use(cors_1.default());
app.use(morgan_1.default('dev'));
app.use(express_1.default.json());
app.get('/empresa', empresaController.getAll);
app.get('/empresa/:cuit', empresaController.getOne);
app.post('/empresa', empresaController.create);
app.put('/empresa', empresaController.update);
app.delete('/empresa/:cuit', empresaController.delete);
app.get('/linea', lineaController.getAll);
app.get('/linea/:idLineaColectivo', lineaController.getOne);
app.post('/linea', lineaController.create);
app.put('/linea', lineaController.update);
app.delete('/linea/:idLineaColectivo', lineaController.delete);
app.get('/parada', paradaController.getAll);
app.get('/parada/:nroParada', paradaController.getOne);
app.post('/parada', paradaController.create);
app.put('/parada', paradaController.update);
app.delete('/parada/:nroParada', paradaController.delete);
app.get('/recorrido', recorridoController.getAll);
app.get('/recorrido/:idRecorrido', recorridoController.getOne);
app.post('/recorrido', recorridoController.create);
app.put('/recorrido', recorridoController.update);
app.delete('/recorrido/:idRecorrido', recorridoController.delete);
app.get('/chofer', choferController.getAll);
app.get('/chofer/:cuil', choferController.getOne);
app.post('/chofer', choferController.create);
app.put('/chofer', choferController.update);
app.delete('/chofer/:cuil', choferController.delete);
app.get('/calendario', calendarioController.getAll);
app.get('/calendario/:idCalendario', calendarioController.getOne);
app.post('/calendario', calendarioController.create);
app.put('/calendario', calendarioController.update);
app.delete('/calendario/:idCalendario', calendarioController.delete);
app.listen(3000);
console.log('Server on port', 3000);
